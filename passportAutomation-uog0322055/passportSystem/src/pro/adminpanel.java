package pro;

import javax.swing.JFrame;
import javax.swing.JButton;
import java.awt.Font;
import java.awt.HeadlessException;

import javax.swing.GroupLayout.Alignment;
import javax.swing.ImageIcon;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JPanel;
import java.awt.Color;
import javax.swing.table.DefaultTableModel;
import javax.swing.JTextField;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.JCheckBox;
import javax.swing.ButtonGroup;
import javax.swing.event.AncestorListener;
import javax.swing.event.AncestorEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;



@SuppressWarnings({ "serial", "unused" })
public class adminpanel extends JFrame{
	private mainconnection connect;
	private static final String UNCHECKED = "unchecked";
	private static final String UNCHECKED2 = UNCHECKED;
	private static final String UNCHECKED22 = UNCHECKED2;
	@SuppressWarnings("unused")
	private static final String UNCHECKED222 = UNCHECKED22;
	@SuppressWarnings("unused")
	private JFrame frame;

	/**
	 * Launch the application.
	 */

	/**
	 * Create the application.
	 */
	 public adminpanel() {
		getContentPane().setBackground(new Color(183, 242, 242));
	        initComponents();
	        // Create an instance of mainconnection
	        connect = new mainconnection();
	        // Establish the database connection
	        connect.establishConnection();
	        new admin(connect.getConnection());
	    }

	    /**
	     * This method is called from within the constructor to initialize the form.
	     * WARNING: Do NOT modify this code. The content of this method is always
	     * regenerated by the Form Editor.
	     */
	    
	    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
	    private void initComponents() {

	        jScrollPane1 = new javax.swing.JScrollPane();
	        jTable1 = new javax.swing.JTable();
	        jScrollPane2 = new javax.swing.JScrollPane();
	        jScrollPane2.addAncestorListener(new AncestorListener() {
	        	public void ancestorAdded(AncestorEvent event) {
	        	}
	        	public void ancestorMoved(AncestorEvent event) {
	        	}
	        	public void ancestorRemoved(AncestorEvent event) {
	        	}
	        });
	        jLabel2 = new javax.swing.JLabel();
	        
	     

	        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

	        jLabel2.setFont(new Font("Tahoma", Font.BOLD, 26)); // NOI18N
	        jLabel2.setText("ADMIN PANEL");
	        
	        JPanel panel = new JPanel();
	        panel.setBackground(new Color(73, 199, 235));
	        
	        id = new JTextField();
	        id.setFont(new Font("Tahoma", Font.PLAIN, 18));
	        id.addActionListener(new ActionListener() {
	        	public void actionPerformed(ActionEvent e) {
	        	}
	        });
	        id.setColumns(10);
	        id.setEditable(false); 
	        
	        lblNewLabel = new JLabel("Applicant ID");
	        lblNewLabel.setForeground(new Color(255, 0, 0));
	        lblNewLabel.setFont(new Font("Tahoma", Font.BOLD, 15));
	        
	        panel_1 = new JPanel();
	        panel_1.setBackground(new Color(73, 199, 235));
	        
	        panel_2 = new JPanel();
	        panel_2.setBackground(new Color(73, 199, 235));
	        panel_2.setLayout(null);
	        
	        lblNewLabel_5 = new JLabel("POLICE VERIFICATION");
	        lblNewLabel_5.setBounds(224, 10, 214, 24);
	        lblNewLabel_5.setFont(new Font("Tahoma", Font.BOLD, 14));
	        panel_2.add(lblNewLabel_5);
	        
	        lblNewLabel_6 = new JLabel("DATE RESERVATION");
	        lblNewLabel_6.setFont(new Font("Tahoma", Font.BOLD, 18));
	        
	        date = new JTextField();
	        date.addActionListener(new ActionListener() {
	        	
	        	//REQUESTED DATE
	        	public void actionPerformed(ActionEvent e) {
	        		
	        	}
	        });
	        date.setColumns(10);
	        date.setEditable(false); 
	        show = new JButton("SHOW DATA");
	        show.setFont(new Font("Tahoma", Font.BOLD, 14));
	        show.setBackground(new Color(255, 159, 159));
	        show.addActionListener(new ActionListener() {
	        	
	        	//SHOW DATA
	        	public void actionPerformed(ActionEvent e) {
	        		// Clear existing data from the table
	                DefaultTableModel tblModel = (DefaultTableModel) jTable2.getModel();
	                tblModel.setRowCount(0);

	                // Make connection between DB and button
	                mainconnection connect = new mainconnection();
	                connect.establishConnection();

	                // Data validation
	                admin tblshow = new admin(connect.getConnection(), tblModel);
	                
	                // Call the tblshow method to populate the table
	                tblshow.tblshow();
	            }
	        });
	        
	        btnNewButton_3 = new JButton("RESET PHOTO FIELDS");
	        btnNewButton_3.addActionListener(new ActionListener() {
	        	
	        	//REMOVE IMAGES
	        	public void actionPerformed(ActionEvent e) {
	        		emptya.setIcon(null);
	                emptyb.setIcon(null);
	        	}
	        });
	        btnNewButton_3.setBackground(new Color(255, 159, 159));
	        btnNewButton_3.setFont(new Font("Tahoma", Font.BOLD, 14));
	        
	        lblNewLabel_7 = new JLabel("Requested Date");
	        lblNewLabel_7.setFont(new Font("Tahoma", Font.PLAIN, 17));
	        
	        JCheckBox chckbxNewCheckBox = new JCheckBox("ACCEPT");
	        chckbxNewCheckBox.addActionListener(new ActionListener() {
	        	
	        	//accept
	        	public void actionPerformed(ActionEvent e) {
	        		datehow="accept";
	        	
	        	}
	        });
	        chckbxNewCheckBox.setFont(new Font("Tahoma", Font.BOLD, 14));
	        
	        JCheckBox chckbxNewCheckBox_2 = new JCheckBox("DECLINE");
	        chckbxNewCheckBox_2.addActionListener(new ActionListener() {
	        	public void actionPerformed(ActionEvent e) {
	        		datehow="reject";
	        	}
	        });
	        chckbxNewCheckBox_2.setFont(new Font("Tahoma", Font.BOLD, 14));
	        
	        available = new JTextField();
	        available.setColumns(10);
	        
	        lblNewLabel_8 = new JLabel("Available Dates");
	        lblNewLabel_8.setFont(new Font("Tahoma", Font.PLAIN, 17));

	        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
	        layout.setHorizontalGroup(
	        	layout.createParallelGroup(Alignment.LEADING)
	        		.addGroup(layout.createSequentialGroup()
	        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
	        				.addGroup(layout.createSequentialGroup()
	        					.addGap(18)
	        					.addComponent(lblNewLabel, GroupLayout.PREFERRED_SIZE, 102, GroupLayout.PREFERRED_SIZE)
	        					.addPreferredGap(ComponentPlacement.UNRELATED)
	        					.addComponent(id, GroupLayout.PREFERRED_SIZE, 328, GroupLayout.PREFERRED_SIZE))
	        				.addGroup(layout.createSequentialGroup()
	        					.addContainerGap()
	        					.addComponent(panel, GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE))
	        				.addGroup(layout.createSequentialGroup()
	        					.addContainerGap()
	        					.addComponent(lblNewLabel_6))
	        				.addGroup(layout.createSequentialGroup()
	        					.addContainerGap()
	        					.addGroup(layout.createParallelGroup(Alignment.TRAILING)
	        						.addGroup(layout.createSequentialGroup()
	        							.addComponent(lblNewLabel_7, GroupLayout.PREFERRED_SIZE, 126, GroupLayout.PREFERRED_SIZE)
	        							.addPreferredGap(ComponentPlacement.UNRELATED))
	        						.addGroup(layout.createSequentialGroup()
	        							.addComponent(lblNewLabel_8, GroupLayout.PREFERRED_SIZE, 120, GroupLayout.PREFERRED_SIZE)
	        							.addGap(16)))
	        					.addGroup(layout.createParallelGroup(Alignment.TRAILING, false)
	        						.addComponent(available, Alignment.LEADING)
	        						.addGroup(Alignment.LEADING, layout.createSequentialGroup()
	        							.addComponent(chckbxNewCheckBox)
	        							.addPreferredGap(ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
	        							.addComponent(chckbxNewCheckBox_2, GroupLayout.PREFERRED_SIZE, 93, GroupLayout.PREFERRED_SIZE))
	        						.addComponent(date, Alignment.LEADING, 267, 267, Short.MAX_VALUE))))
	        			.addPreferredGap(ComponentPlacement.RELATED)
	        			.addGroup(layout.createParallelGroup(Alignment.TRAILING, false)
	        				.addComponent(btnNewButton_3, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
	        				.addComponent(panel_1, GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE))
	        			.addGap(37)
	        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
	        				.addComponent(panel_2, GroupLayout.PREFERRED_SIZE, 583, GroupLayout.PREFERRED_SIZE)
	        				.addGroup(layout.createParallelGroup(Alignment.LEADING)
	        					.addComponent(show, GroupLayout.PREFERRED_SIZE, 583, GroupLayout.PREFERRED_SIZE)
	        					.addComponent(jScrollPane2, GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE)))
	        			.addGap(41))
	        		.addGroup(layout.createSequentialGroup()
	        			.addGap(581)
	        			.addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, 218, GroupLayout.PREFERRED_SIZE)
	        			.addContainerGap(747, Short.MAX_VALUE))
	        );
	        layout.setVerticalGroup(
	        	layout.createParallelGroup(Alignment.LEADING)
	        		.addGroup(layout.createSequentialGroup()
	        			.addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, 60, GroupLayout.PREFERRED_SIZE)
	        			.addGap(12)
	        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
	        				.addGroup(layout.createSequentialGroup()
	        					.addGroup(layout.createParallelGroup(Alignment.BASELINE)
	        						.addComponent(id, GroupLayout.PREFERRED_SIZE, 37, GroupLayout.PREFERRED_SIZE)
	        						.addComponent(lblNewLabel, GroupLayout.PREFERRED_SIZE, 25, GroupLayout.PREFERRED_SIZE))
	        					.addPreferredGap(ComponentPlacement.RELATED)
	        					.addComponent(panel, GroupLayout.PREFERRED_SIZE, 498, GroupLayout.PREFERRED_SIZE)
	        					.addPreferredGap(ComponentPlacement.RELATED)
	        					.addComponent(lblNewLabel_6)
	        					.addPreferredGap(ComponentPlacement.RELATED)
	        					.addGroup(layout.createParallelGroup(Alignment.BASELINE)
	        						.addComponent(lblNewLabel_7)
	        						.addComponent(date, GroupLayout.PREFERRED_SIZE, 27, GroupLayout.PREFERRED_SIZE))
	        					.addPreferredGap(ComponentPlacement.UNRELATED)
	        					.addGroup(layout.createParallelGroup(Alignment.TRAILING)
	        						.addComponent(available, GroupLayout.PREFERRED_SIZE, 27, GroupLayout.PREFERRED_SIZE)
	        						.addComponent(lblNewLabel_8)))
	        				.addGroup(layout.createSequentialGroup()
	        					.addComponent(panel_1, GroupLayout.PREFERRED_SIZE, 561, GroupLayout.PREFERRED_SIZE)
	        					.addGap(18)
	        					.addComponent(btnNewButton_3, GroupLayout.PREFERRED_SIZE, 38, GroupLayout.PREFERRED_SIZE))
	        				.addGroup(layout.createSequentialGroup()
	        					.addGap(10)
	        					.addComponent(jScrollPane2, GroupLayout.PREFERRED_SIZE, 264, GroupLayout.PREFERRED_SIZE)
	        					.addPreferredGap(ComponentPlacement.UNRELATED)
	        					.addComponent(show, GroupLayout.PREFERRED_SIZE, 54, GroupLayout.PREFERRED_SIZE)
	        					.addPreferredGap(ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
	        					.addComponent(panel_2, GroupLayout.PREFERRED_SIZE, 300, GroupLayout.PREFERRED_SIZE)))
	        			.addGap(18)
	        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
	        				.addComponent(chckbxNewCheckBox)
	        				.addComponent(chckbxNewCheckBox_2))
	        			.addGap(88))
	        );
	        
	        JCheckBox chckbxNewCheckBox_2_1 = new JCheckBox("DECLINE");
	        chckbxNewCheckBox_2_1.addActionListener(new ActionListener() {
	        	
	        	//decline police report
	        	public void actionPerformed(ActionEvent e) {
	        		docstatus2="declined";
	        	}
	        });
	        buttonGroup_1.add(chckbxNewCheckBox_2_1);
	        chckbxNewCheckBox_2_1.setFont(new Font("Tahoma", Font.BOLD, 14));
	        chckbxNewCheckBox_2_1.setBounds(6, 253, 114, 40);
	        panel_2.add(chckbxNewCheckBox_2_1);
	        
	        JLabel policeimg = new JLabel("");
	        policeimg.setBounds(126, 44, 420, 245);
	        panel_2.add(policeimg);
	        emptyb=policeimg;
	        JCheckBox chckbxNewCheckBox_2_1_1 = new JCheckBox("ACCEPT");
	        chckbxNewCheckBox_2_1_1.addActionListener(new ActionListener() {
	        	
	        	//police doc accept
	        	public void actionPerformed(ActionEvent e) {
	        		docstatus2="accepted";
	        	}
	        });
	        buttonGroup_1.add(chckbxNewCheckBox_2_1_1);
	        chckbxNewCheckBox_2_1_1.setFont(new Font("Tahoma", Font.BOLD, 14));
	        chckbxNewCheckBox_2_1_1.setBounds(6, 202, 114, 40);
	        panel_2.add(chckbxNewCheckBox_2_1_1);
	        
	        btnNewButton_2 = new JButton("SHOW");
	        btnNewButton_2.addActionListener(new ActionListener() {
	        	
	        	//police verify img
	        	public void actionPerformed(ActionEvent e) {
	        		 // Path to the image file
	                String imagePath = "C:\\Users\\tharu\\OneDrive\\Desktop\\New folder (3)\\police.jpg";
	                try {
	                    // Assuming imglink contains the file path of the image
	                    String image = imagePath;

	                    // Create an ImageIcon and set it to the label
	                    ImageIcon icon = new ImageIcon(image);
	                    policeimg.setIcon(icon);
	                } catch (Exception ex) {
	                    // Handle the exception 
	                    ex.printStackTrace();
	                }
	        	}
	        	
	        	
	        });
	        btnNewButton_2.setFont(new Font("Tahoma", Font.BOLD, 14));
	        btnNewButton_2.setBounds(6, 71, 114, 45);
	        panel_2.add(btnNewButton_2);
	        panel_1.setLayout(null);
	        
	        lblNewLabel_4 = new JLabel("DOCUMENT VERIFICATION\r\n");
	        lblNewLabel_4.setFont(new Font("Tahoma", Font.BOLD, 14));
	        lblNewLabel_4.setBounds(90, 0, 216, 22);
	        panel_1.add(lblNewLabel_4);
	        
	        chckbxNewCheckBox_1 = new JCheckBox("ACCEPT");
	        buttonGroup.add(chckbxNewCheckBox_1);
	        chckbxNewCheckBox_1.addActionListener(new ActionListener() {
	        	
	        	//doc accepted
	        	public void actionPerformed(ActionEvent e) {
	        		docstatus="accepted";
	        	}
	        });
	        chckbxNewCheckBox_1.setFont(new Font("Tahoma", Font.BOLD, 14));
	        chckbxNewCheckBox_1.setBounds(34, 500, 114, 40);
	        panel_1.add(chckbxNewCheckBox_1);
	        
	        JLabel docimg = new JLabel("");
	        docimg.setBounds(63, 66, 294, 403);
	        panel_1.add(docimg);
	        emptya=docimg;
	        JCheckBox chckbxNewCheckBox_1_1 = new JCheckBox("DECLINE");
	        chckbxNewCheckBox_1_1.addActionListener(new ActionListener() {
	        	
	        	//doc rejected
	        	public void actionPerformed(ActionEvent e) {
	        		docstatus="declined";
	        	}
	        });
	        buttonGroup.add(chckbxNewCheckBox_1_1);
	        chckbxNewCheckBox_1_1.setFont(new Font("Tahoma", Font.BOLD, 14));
	        chckbxNewCheckBox_1_1.setBounds(229, 500, 114, 40);
	        panel_1.add(chckbxNewCheckBox_1_1);
	        
	        btnNewButton_1 = new JButton("SHOW");
	        btnNewButton_1.addActionListener(new ActionListener() {
	        	
	            // DOC IMAGE LOAD
	            public void actionPerformed(ActionEvent e) {
	                try {
	                    // Assuming imglink contains the file path of the image
	                    String imagePath = imglink;

	                    // Create an ImageIcon and set it to the label
	                    ImageIcon icon = new ImageIcon(imagePath);
	                    docimg.setIcon(icon);
	                } catch (Exception ex) {
	                    // Handle the exception (e.g., display an error message)
	                    ex.printStackTrace();
	                }
	            }
	        });

	        btnNewButton_1.setFont(new Font("Tahoma", Font.BOLD, 14));
	        btnNewButton_1.setBounds(151, 32, 85, 21);
	        panel_1.add(btnNewButton_1);
	        panel.setLayout(null);
	        
	        jButton3_4 = new JButton();
	        jButton3_4.setBounds(23, 398, 122, 40);
	        panel.add(jButton3_4);
	        jButton3_4.addActionListener(new ActionListener() {
	        	
	        	//log out function
	        	@SuppressWarnings("deprecation")
				public void actionPerformed(ActionEvent e) {
	        		int dialogResult = JOptionPane.showConfirmDialog(adminpanel.this, "Do you want to log out?",
							"Confirmation", JOptionPane.YES_NO_OPTION);
					if (dialogResult == JOptionPane.YES_OPTION) {home nw= new home();
					nw.show();
					dispose();	
						
					}
	        	}
	        	
	        });
	        jButton3_4.setText("LOG OUT");
	        jButton3_4.setFont(new Font("Tahoma", Font.PLAIN, 14));
	        jButton3 = new javax.swing.JButton();
	        jButton3.setBounds(310, 398, 122, 40);
	        panel.add(jButton3);
	        
	        	        jButton3.setFont(new Font("Tahoma", Font.PLAIN, 14)); // NOI18N
	        	        jButton3.setText("DELETE");
	        	        
	        	        btnSearch = new JButton();
	        	        btnSearch.setBounds(21, 448, 411, 40);
	        	        panel.add(btnSearch);
	        	        btnSearch.addActionListener(new ActionListener() {
	        	        	
	        	        	//save button
	        	        	public void actionPerformed(ActionEvent e) {
	        	        	    // Get data from JTextFields
	        	        	    String nameb = name.getText();
	        	        	    String addressb = address.getText();
	        	        	    String contactText = contact.getText();
	        	        	    String email = mail.getText();
	        	        	    String nicText = nic.getText();
	        	        	    String docLink = doc.getText();
	        	        	    //String dater = date.getText();
	        	        	    String gender=gendert.getText();
	        	        	    String tavailable=available.getText();

	        	        	    // Convert contactText and nicText to int
	        	        	    int contacti = 0;
	        	        	    int nici = 0;

	        	        	    try {
	        	        	        contacti = Integer.parseInt(contactText);
	        	        	        nici = Integer.parseInt(nicText);
	        	        	    } catch (NumberFormatException b) {
	        	        	        // Handle the case where the text is not a valid integer
	        	        	        JOptionPane.showInputDialog("Update Failed!");
	        	        	        return; // Exit the method to avoid proceeding with invalid data
	        	        	    }

	        	        	    // Get the ApplicantID from your UI
	        	        	    int applicantID = Integer.parseInt(id.getText());

	        	        	    // Insert data into the database using the applicant class
	        	        	    admin updatetable = new admin(connect.getConnection());
	        	        	    updatetable.updateData(nameb, addressb, contacti, email, nici, docLink, gender, docstatus, docstatus2,tavailable,datehow,applicantID);
	        	        	}

	        	        		 
	        	        	
	        	        });
	        	        btnSearch.setText("SAVE CHANGES");
	        	        btnSearch.setFont(new Font("Tahoma", Font.PLAIN, 14));
	        	        
	        	        name = new JTextField();
	        	        name.setBounds(93, 18, 298, 27);
	        	        panel.add(name);
	        	        
	        	        jLabel2_1 = new JLabel();
	        	        jLabel2_1.setText("Name");
	        	        jLabel2_1.setBounds(21, 25, 37, 13);
	        	        panel.add(jLabel2_1);
	        	        
	        	        jLabel3 = new JLabel();
	        	        jLabel3.setText("Address");
	        	        jLabel3.setBounds(21, 64, 70, 13);
	        	        panel.add(jLabel3);
	        	        
	        	        jLabel4 = new JLabel();
	        	        jLabel4.setText("Contact");
	        	        jLabel4.setBounds(21, 103, 70, 13);
	        	        panel.add(jLabel4);
	        	        
	        	        jLabel5 = new JLabel();
	        	        jLabel5.setText("E Mail");
	        	        jLabel5.setBounds(21, 140, 37, 13);
	        	        panel.add(jLabel5);
	        	        
	        	        lblNewLabel_1 = new JLabel("Gender");
	        	        lblNewLabel_1.setBounds(21, 186, 45, 13);
	        	        panel.add(lblNewLabel_1);
	        	        
	        	        jLabel7 = new JLabel();
	        	        jLabel7.setText("NIC number");
	        	        jLabel7.setBounds(10, 240, 80, 13);
	        	        panel.add(jLabel7);
	        	        
	        	        lblNewLabel_2 = new JLabel("For Document Submition");
	        	        lblNewLabel_2.setFont(new Font("Arial Black", Font.BOLD, 18));
	        	        lblNewLabel_2.setBounds(66, 280, 309, 18);
	        	        panel.add(lblNewLabel_2);
	        	        
	        	        lblNewLabel_3 = new JLabel("Document link");
	        	        lblNewLabel_3.setFont(new Font("Tahoma", Font.BOLD, 11));
	        	        lblNewLabel_3.setBounds(10, 321, 135, 27);
	        	        panel.add(lblNewLabel_3);
	        	        
	        	        address = new JTextField();
	        	        address.setBounds(93, 57, 298, 27);
	        	        panel.add(address);
	        	        
	        	        contact = new JTextField();
	        	        contact.setBounds(93, 96, 298, 27);
	        	        panel.add(contact);
	        	        
	        	        mail = new JTextField();
	        	        mail.setBounds(93, 133, 298, 27);
	        	        panel.add(mail);
	        	        
	        	        doc = new JTextField();
	        	        doc.setBounds(103, 321, 288, 27);
	        	        panel.add(doc);
	        	        
	        	        nic = new JTextField();
	        	        nic.setBounds(103, 233, 288, 27);
	        	        panel.add(nic);
	        	        
	        	        btnNewButton = new JButton("CLEAR");
	        	        btnNewButton.addActionListener(new ActionListener() {
	        	        	
	        	        	//CLEAR button
	        	        	public void actionPerformed(ActionEvent e) {
	        	        		// Clear button action
	        	                // Display a confirmation dialog
	        	        		int dialogResult = JOptionPane.showConfirmDialog(adminpanel.this, "Do you want to clear the fields?", "Confirmation", JOptionPane.YES_NO_OPTION);

	        	                // Check the user's choice
	        	                if (dialogResult == JOptionPane.YES_OPTION) {
	        	                    // Clear the fields
	        	                    contact.setText("");
	        	                    name.setText("");
	        	                    address.setText("");
	        	                    mail.setText("");
	        	                    doc.setText("");
	        	                    date.setText("");
	        	                    nic.setText("");
	        	                    

	        	                    // Deselect radio buttons
	        	                    
	        	                    buttonGroup.clearSelection();
	        	                    buttonGroup_1.clearSelection();
	        	                    buttonGroup_2.clearSelection();}
	        	                   
	        	        	}	
	        	        	
	        	        });
	        	        btnNewButton.setBackground(new Color(255, 159, 159));
	        	        btnNewButton.setFont(new Font("Tahoma", Font.PLAIN, 14));
	        	        btnNewButton.setBounds(175, 398, 113, 40);
	        	        panel.add(btnNewButton);
	        	        
	        	        gendert = new JTextField();
	        	        gendert.setBounds(93, 179, 298, 27);
	        	        panel.add(gendert);
	        	        gendert.setColumns(10);
	        	        
	        	        lblNewLabel_9 = new JLabel("if The gender is neither male nor female. Please review");
	        	        lblNewLabel_9.setBounds(103, 167, 259, 13);
	        	        panel.add(lblNewLabel_9);
	        	        jButton3.addActionListener(new java.awt.event.ActionListener() {
	        	            public void actionPerformed(java.awt.event.ActionEvent evt) {
	        	                jButton3ActionPerformed(evt);
	        	            }
	        	        });
	        jTable2 = new javax.swing.JTable();
	        jTable2.addMouseListener(new MouseAdapter() {
	        	@Override
	        	public void mouseClicked(MouseEvent e) {
	        	    DefaultTableModel tblModel = (DefaultTableModel) jTable2.getModel();
	        	    
	        	    // Check if a row is selected
	        	    int selectedRow = jTable2.getSelectedRow();
	        	    if (selectedRow != -1) {
	        	        String tid = getStringValue(tblModel.getValueAt(selectedRow, 0));
	        	        String tname = getStringValue(tblModel.getValueAt(selectedRow, 1));
	        	        String taddress = getStringValue(tblModel.getValueAt(selectedRow, 2));
	        	        String tcontact = getStringValue(tblModel.getValueAt(selectedRow, 3));
	        	        String temail = getStringValue(tblModel.getValueAt(selectedRow, 4));
	        	        String tnic = getStringValue(tblModel.getValueAt(selectedRow, 5));
	        	        String tdoclink = getStringValue(tblModel.getValueAt(selectedRow, 6));
	        	        String tgender = getStringValue(tblModel.getValueAt(selectedRow, 7));
	        	        String tdate = getStringValue(tblModel.getValueAt(selectedRow, 10));
	        	        
	        	        
	        	        // set to textfield
	        	        id.setText(tid);
	        	        name.setText(tname);
	        	        address.setText(taddress);
	        	        contact.setText(tcontact);
	        	        mail.setText(temail);
	        	        nic.setText(tnic);
	        	        doc.setText(tdoclink);
	        	        gendert.setText(tgender);
	        	        date.setText(tdate);
	        	        
	        	        imglink=tdoclink;
	        	        
	        	    }
	        	}

	        	// Helper method to handle null values
	        	private String getStringValue(Object value) {
	        	    return (value != null) ? value.toString() : "";
	        	}

	        });
	        jTable2.addAncestorListener(new AncestorListener() {
	        	public void ancestorAdded(AncestorEvent event) {
	        	}
	        	public void ancestorMoved(AncestorEvent event) {
	        	}
	        	public void ancestorRemoved(AncestorEvent event) {
	        	}
	        });
	        jTable2.setRowHeight(30);
	        jScrollPane2.setViewportView(jTable2);
	        
	        	        jTable2.setModel(new DefaultTableModel(
	        	        	new Object[][] {
	        	        		{null, null, null, null, null, null, null, null, null, null, null},
	        	        		{null, null, null, null, null, null, null, null, null, null, null},
	        	        		{null, null, null, null, null, null, null, null, null, null, null},
	        	        		{null, null, null, null, null, null, null, null, null, null, null},
	        	        		{null, null, null, null, null, null, null, null, null, null, null},
	        	        		{null, null, null, null, null, null, null, null, null, null, null},
	        	        		{null, null, null, null, null, null, null, null, null, null, null},
	        	        		{null, null, null, null, null, null, null, null, null, null, null},
	        	        	},
	        	        	new String[] {
	        	        		"Applicant ID", "Name", "Address", "Contact", "Email", "NIC", "DocLink", "Gender", "Doc Verify", "Police Verify", "DateReserve"
	        	        	}
	        	        ));
	        	        
	        	        button_1 = new JButton("New button");
	        	        jScrollPane2.setColumnHeaderView(button_1);
	        getContentPane().setLayout(layout);

	        pack();
	    }// </editor-fold>                        

	    
	    //delete fuction for admin
	    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) throws NumberFormatException, HeadlessException {
	        // Make connection between DB and button
	        mainconnection connect = new mainconnection();
	        connect.establishConnection();

	        admin deletee = new admin(connect.getConnection());

	        // Get user confirmation
	        int response = JOptionPane.showConfirmDialog(this, "Do You Want to DELETE Data?", "Confirmation", JOptionPane.YES_NO_OPTION);

	        if (response == JOptionPane.YES_OPTION) {
	            // Get and parse the input ID
	            String stid = id.getText();
	            int apid = Integer.parseInt(stid);

	            // Call deleteData method
	            deletee.deleteData(apid);
	        }
	    }
	    
                                     

	    /**
	     * @param args the command line arguments
	     */
	    public static void main(String args[]) {
	        /* Set the Nimbus look and feel */
	        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
	        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
	         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
	         */
	       /* try {
	            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
	                if ("Nimbus".equals(info.getName())) {
	                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
	                    break;
	                }
	            }
	        } catch (ClassNotFoundException ex) {
	            java.util.logging.Logger.getLogger(UDB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	        } catch (InstantiationException ex) {
	            java.util.logging.Logger.getLogger(UDB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	        } catch (IllegalAccessException ex) {
	            java.util.logging.Logger.getLogger(UDB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
	            java.util.logging.Logger.getLogger(UDB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	        }
	        //</editor-fold>

	        /* Create and display the form */
	        java.awt.EventQueue.invokeLater(new Runnable() {
	            public void run() {
	                new adminpanel().setVisible(true);
	            }
	        });
	    }

	    // Variables declaration - do not modify                     
	    private javax.swing.JButton jButton3;
	    private javax.swing.JLabel jLabel2;
	    @SuppressWarnings("unused")
		private javax.swing.JScrollPane jScrollPane1;
	    private javax.swing.JScrollPane jScrollPane2;
	    @SuppressWarnings("unused")
		private javax.swing.JTable jTable1;
	    private javax.swing.JTable jTable2;
	    private JButton btnSearch;
	    private JButton jButton3_4;
	    private JTextField id;
	    private JLabel lblNewLabel;
	    private JTextField name;
	    private JLabel jLabel2_1;
	    private JLabel jLabel3;
	    private JLabel jLabel4;
	    private JLabel jLabel5;
	    private JLabel lblNewLabel_1;
	    private JLabel jLabel7;
	    private JLabel lblNewLabel_2;
	    private JLabel lblNewLabel_3;
	    private JTextField address;
	    private JTextField contact;
	    private JTextField mail;
	    private JTextField doc;
	    private JTextField nic;
	    private JPanel panel_1;
	    private JLabel lblNewLabel_4;
	    private JPanel panel_2;
	    private JLabel lblNewLabel_5;
	    private JCheckBox chckbxNewCheckBox_1;
	    private JLabel lblNewLabel_6;
	    private JTextField date;
	    private final ButtonGroup buttonGroup = new ButtonGroup();
	    private final ButtonGroup buttonGroup_1 = new ButtonGroup();
	    private String docstatus;
	    private String docstatus2;
	    @SuppressWarnings("unused")
		private String gender;
	    private final ButtonGroup buttonGroup_2 = new ButtonGroup();
	    private JButton btnNewButton;
	    private JButton button_1;
	    private JTextField gendert;
	    private JButton show;
	    private JLabel lblNewLabel_9;
	    private JButton btnNewButton_1;
	    private JButton btnNewButton_2;
	    private String imglink;
	    private JButton btnNewButton_3;
	    private JLabel emptya;
	    private JLabel emptyb;
	    private JLabel lblNewLabel_7;
	    private JTextField available;
	    private JLabel lblNewLabel_8;
	    private String datehow;
	}


	/**
	 * Initialize the contents of the frame.
	 */